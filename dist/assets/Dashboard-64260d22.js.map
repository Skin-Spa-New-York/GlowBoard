{"version":3,"mappings":"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","names":["StatsGrid","stats","statItems","title","value","todaySales","toLocaleString","icon","DollarSign","change","growth","toFixed","changeColor","weekSales","Calendar","monthSales","TrendingUp","avgDaily","Award","totalTreatments","className","children","map","item","index","jsxRuntimeExports","jsx","Card","jsxs","CardContent","LocationSelector","selectedLocation","onLocationChange","locations","Building2","Select","onValueChange","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","location","SalesChart","lazy","__vitePreload","import","ChartLoader","LazyChart","props","Suspense","fallback","RecentActivity","salesData","showLocation","sortedData","sort","a","b","Date","date","getTime","slice","CardHeader","CardTitle","Activity","length","record","daily_sales","Badge","variant","format","treatments_count","notes","id","Dashboard","setSelectedLocation","useState","timeframe","setTimeframe","user","loading","authLoading","useAuth","dataLoading","useSalesData","userLocation","isAdmin","is_admin","LOCATIONS","Link","to","Settings","onTimeframeChange","PerformanceMetrics"],"sources":["../../src/components/Dashboard/StatsGrid.tsx","../../src/components/Dashboard/LocationSelector.tsx","../../src/components/Dashboard/LazyChart.tsx","../../src/components/Dashboard/RecentActivity.tsx","../../src/pages/Dashboard.tsx"],"sourcesContent":["import { DollarSign, TrendingUp, Calendar, Award } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport type { SalesStats } from \"@/utils/salesUtils\";\n\ninterface StatsGridProps {\n  stats: SalesStats;\n}\n\nexport default function StatsGrid({ stats }: StatsGridProps) {\n  const statItems = [\n    {\n      title: \"Today's Sales\",\n      value: `$${stats.todaySales.toLocaleString()}`,\n      icon: DollarSign,\n      change:\n        stats.growth > 0\n          ? `+${stats.growth.toFixed(1)}%`\n          : `${stats.growth.toFixed(1)}%`,\n      changeColor: stats.growth >= 0 ? \"text-green-400\" : \"text-red-400\",\n    },\n    {\n      title: \"This Week\",\n      value: `$${stats.weekSales.toLocaleString()}`,\n      icon: Calendar,\n      change: \"vs last week\",\n      changeColor: \"text-gray-400\",\n    },\n    {\n      title: \"This Month\",\n      value: `$${stats.monthSales.toLocaleString()}`,\n      icon: TrendingUp,\n      change: \"vs last month\",\n      changeColor: \"text-gray-400\",\n    },\n    {\n      title: \"Avg Daily\",\n      value: `$${stats.avgDaily.toLocaleString()}`,\n      icon: Award,\n      change: `${stats.totalTreatments} treatments`,\n      changeColor: \"text-[#bc9a64]\",\n    },\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n      {statItems.map((item, index) => (\n        <Card\n          key={index}\n          className=\"bg-[#1a1a1a] border-[#bc9a64]/20 hover-lift\"\n        >\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"w-12 h-12 bg-[#bc9a64]/10 rounded-xl flex items-center justify-center\">\n                <item.icon className=\"w-6 h-6 text-[#bc9a64]\" />\n              </div>\n              <div className={`text-sm font-medium ${item.changeColor}`}>\n                {item.change}\n              </div>\n            </div>\n            <div>\n              <p className=\"text-2xl font-bold text-white mb-1\">{item.value}</p>\n              <p className=\"text-sm text-gray-400\">{item.title}</p>\n            </div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Building2 } from \"lucide-react\";\nimport type { Location } from \"@/types/entities\";\n\ninterface LocationSelectorProps {\n  selectedLocation: string;\n  onLocationChange: (location: string) => void;\n  locations: readonly Location[];\n}\n\nexport default function LocationSelector({\n  selectedLocation,\n  onLocationChange,\n  locations,\n}: LocationSelectorProps) {\n  return (\n    <div className=\"flex items-center gap-3\">\n      <Building2 className=\"w-5 h-5 text-[#bc9a64]\" />\n      <Select value={selectedLocation} onValueChange={onLocationChange}>\n        <SelectTrigger className=\"w-48 bg-[#1a1a1a] border-[#bc9a64]/20 text-white\">\n          <SelectValue placeholder=\"Select location\" />\n        </SelectTrigger>\n        <SelectContent className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n          <SelectItem value=\"all\" className=\"text-white hover:bg-[#bc9a64]/10\">\n            All Locations\n          </SelectItem>\n          {locations.map((location) => (\n            <SelectItem\n              key={location}\n              value={location}\n              className=\"text-white hover:bg-[#bc9a64]/10\"\n            >\n              {location}\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n    </div>\n  );\n}\n","import { lazy, Suspense } from \"react\";\nimport type { SalesRecord } from \"@/types/entities\";\nimport type { TimeframeType } from \"@/utils/dateUtils\";\n\n// Lazy load the heavy chart component\nconst SalesChart = lazy(() => import(\"./SalesChart\"));\n\ninterface LazyChartProps {\n  salesData: SalesRecord[];\n  timeframe: TimeframeType;\n  onTimeframeChange: (timeframe: TimeframeType) => void;\n}\n\nconst ChartLoader = () => (\n  <div className=\"bg-[#1a1a1a] border-[#bc9a64]/20 rounded-lg p-8\">\n    <div className=\"h-80 flex items-center justify-center\">\n      <div className=\"text-center\">\n        <div className=\"w-8 h-8 border-2 border-[#bc9a64] border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n        <p className=\"text-gray-400\">Loading Chart...</p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default function LazyChart(props: LazyChartProps) {\n  return (\n    <Suspense fallback={<ChartLoader />}>\n      <SalesChart {...props} />\n    </Suspense>\n  );\n}\n","import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Activity, Building2, DollarSign } from \"lucide-react\";\nimport { format } from \"date-fns\";\nimport type { SalesRecord } from \"@/types/entities\";\n\ninterface RecentActivityProps {\n  salesData: SalesRecord[];\n  showLocation?: boolean;\n}\n\nexport default function RecentActivity({\n  salesData,\n  showLocation = false,\n}: RecentActivityProps) {\n  const sortedData = [...salesData]\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n    .slice(0, 10);\n\n  return (\n    <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n      <CardHeader>\n        <CardTitle className=\"text-white flex items-center gap-2\">\n          <Activity className=\"w-5 h-5 text-[#bc9a64]\" />\n          Recent Activity\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        {sortedData.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <Activity className=\"w-12 h-12 text-gray-600 mx-auto mb-4\" />\n            <p className=\"text-gray-400\">No recent activity</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {sortedData.map((record) => (\n              <div\n                key={record.id}\n                className=\"flex items-center justify-between p-4 bg-[#0e0e0e] rounded-lg border border-[#bc9a64]/10 hover-lift\"\n              >\n                <div className=\"flex items-center gap-4\">\n                  <div className=\"w-10 h-10 bg-[#bc9a64]/20 rounded-lg flex items-center justify-center\">\n                    <DollarSign className=\"w-5 h-5 text-[#bc9a64]\" />\n                  </div>\n                  <div>\n                    <div className=\"flex items-center gap-2\">\n                      <p className=\"font-medium text-white\">\n                        ${record.daily_sales.toLocaleString()}\n                      </p>\n                      {showLocation && (\n                        <Badge\n                          variant=\"outline\"\n                          className=\"text-gray-300 border-gray-600\"\n                        >\n                          <Building2 className=\"w-3 h-3 mr-1\" />\n                          {record.location}\n                        </Badge>\n                      )}\n                    </div>\n                    <p className=\"text-sm text-gray-400\">\n                      {format(new Date(record.date), \"MMM d, yyyy\")}\n                      {record.treatments_count && (\n                        <span className=\"ml-2\">\n                          • {record.treatments_count} treatments\n                        </span>\n                      )}\n                    </p>\n                  </div>\n                </div>\n\n                {record.notes && (\n                  <div className=\"max-w-xs\">\n                    <p className=\"text-sm text-gray-300 truncate\">\n                      {record.notes}\n                    </p>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","import { useState } from \"react\";\nimport { format } from \"date-fns\";\nimport { Settings } from \"lucide-react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useSalesData } from \"@/hooks/useSalesData\";\nimport { LOCATIONS } from \"@/types/entities\";\nimport type { TimeframeType } from \"@/utils/dateUtils\";\n\nimport StatsGrid from \"@/components/Dashboard/StatsGrid\";\nimport LocationSelector from \"@/components/Dashboard/LocationSelector\";\nimport LazyChart from \"@/components/Dashboard/LazyChart\";\nimport RecentActivity from \"@/components/Dashboard/RecentActivity\";\nimport PerformanceMetrics from \"@/components/Dashboard/PerformanceMetrics\";\n\nexport default function Dashboard() {\n  const [selectedLocation, setSelectedLocation] = useState(\"all\");\n  const [timeframe, setTimeframe] = useState<TimeframeType>(\"7days\");\n\n  const { user, loading: authLoading } = useAuth();\n  const {\n    salesData,\n    stats,\n    loading: dataLoading,\n  } = useSalesData({\n    selectedLocation,\n    userLocation: user?.location,\n    isAdmin: user?.is_admin,\n    timeframe,\n  });\n\n  const loading = authLoading || dataLoading;\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#0e0e0e] flex items-center justify-center\">\n        <div className=\"w-8 h-8 border-2 border-[#bc9a64] border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0e0e0e] text-white p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        {/* Header */}\n        <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center gap-6\">\n          <div>\n            <h1 className=\"text-3xl font-bold mb-2\">\n              {user?.is_admin\n                ? \"Analytics Overview\"\n                : `${user?.location || \"Location\"} Dashboard`}\n            </h1>\n            <p className=\"text-gray-400\">\n              {format(new Date(), \"EEEE, MMMM d, yyyy\")}\n            </p>\n          </div>\n\n          <div className=\"flex items-center gap-4\">\n            {user?.is_admin && (\n              <LocationSelector\n                selectedLocation={selectedLocation}\n                onLocationChange={setSelectedLocation}\n                locations={LOCATIONS}\n              />\n            )}\n            {user?.is_admin && (\n              <Link\n                to=\"/settings\"\n                className=\"p-2 rounded-full hover:bg-[#2a2a2a] transition-colors duration-200\"\n                title=\"Open Settings\"\n              >\n                <Settings className=\"h-6 w-6 text-gray-400 hover:text-[#bc9a64]\" />\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {/* Stats Grid */}\n        <StatsGrid stats={stats} />\n\n        {/* Charts and Metrics */}\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          <div className=\"lg:col-span-2\">\n            <LazyChart\n              salesData={salesData}\n              timeframe={timeframe}\n              onTimeframeChange={setTimeframe}\n            />\n          </div>\n\n          <div className=\"space-y-6\">\n            <PerformanceMetrics\n              salesData={salesData}\n              selectedLocation={selectedLocation}\n            />\n          </div>\n        </div>\n\n        {/* Recent Activity */}\n        <RecentActivity\n          salesData={salesData.slice(0, 10)}\n          showLocation={user?.is_admin || selectedLocation === \"all\"}\n        />\n      </div>\n    </div>\n  );\n}\n"],"file":"assets/Dashboard-64260d22.js"}