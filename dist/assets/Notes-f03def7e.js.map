{"version":3,"file":"Notes-f03def7e.js","sources":["../../src/components/Notes/NotesHeader.tsx","../../src/components/Notes/NoteForm.tsx","../../src/components/Notes/NotesGrid.tsx","../../src/components/Notes/NotesFilters.tsx","../../src/pages/Notes.tsx"],"sourcesContent":["import { Button } from \"@/components/ui/button\";\nimport { Plus, FileText } from \"lucide-react\";\n\ninterface NotesHeaderProps {\n  isAdmin?: boolean;\n  userLocation: string;\n  onNewNote: () => void;\n}\n\nexport default function NotesHeader({\n  isAdmin,\n  userLocation,\n  onNewNote,\n}: NotesHeaderProps) {\n  return (\n    <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center gap-6\">\n      <div>\n        <h1 className=\"text-3xl font-bold mb-2 flex items-center gap-3\">\n          <FileText className=\"w-8 h-8 text-[#bc9a64]\" />\n          Notes\n        </h1>\n        <p className=\"text-gray-400\">\n          {isAdmin\n            ? \"Manage notes for all locations\"\n            : `Manage notes for ${userLocation}`}\n        </p>\n      </div>\n\n      <Button\n        onClick={onNewNote}\n        className=\"bg-gradient-to-r from-[#bc9a64] to-[#d4b876] hover:from-[#a8875a] hover:to-[#c1a56b] text-[#0e0e0e] font-semibold\"\n      >\n        <Plus className=\"w-5 h-5 mr-2\" />\n        New Note\n      </Button>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport type { Note, Location } from \"@/types/entities\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Save, X, FileText } from \"lucide-react\";\nimport { format, addDays } from \"date-fns\";\n\nconst LOCATIONS = [\n  \"Flatiron\",\n  \"MidEast\",\n  \"Midtown\",\n  \"UWS\",\n  \"Back Bay\",\n  \"North Station\",\n  \"Miami Beach\",\n  \"eStore\",\n  \"Location 9\",\n  \"Location 10\",\n];\n\ninterface NoteFormProps {\n  note?: Note;\n  onSave: (noteData: Partial<Note>) => void;\n  onCancel: () => void;\n  isAdmin: boolean;\n  userLocation?: Location;\n}\n\nexport default function NoteForm({\n  note,\n  onSave,\n  onCancel,\n  isAdmin,\n  userLocation,\n}: NoteFormProps) {\n  const [formData, setFormData] = useState({\n    location:\n      note?.location ||\n      (isAdmin ? (\"\" as Location | \"\") : userLocation || \"Flatiron\"),\n    date: note?.date || format(new Date(), \"yyyy-MM-dd\"),\n    title: note?.title || \"\",\n    content: note?.content || \"\",\n    priority: note?.priority || (\"medium\" as const),\n    visible_until:\n      note?.visible_until || format(addDays(new Date(), 30), \"yyyy-MM-dd\"),\n  });\n\n  const [saving, setSaving] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setSaving(true);\n    await onSave({\n      ...formData,\n      location: formData.location as Location,\n    });\n    setSaving(false);\n  };\n\n  return (\n    <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n      <CardHeader>\n        <CardTitle className=\"text-white flex items-center gap-2\">\n          <FileText className=\"w-5 h-5 text-[#bc9a64]\" />\n          {note ? \"Edit Note\" : \"Create New Note\"}\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Location */}\n            {isAdmin && (\n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-gray-300\">\n                  Location\n                </label>\n                <Select\n                  value={formData.location}\n                  onValueChange={(value) =>\n                    setFormData((prev) => ({\n                      ...prev,\n                      location: value as Location,\n                    }))\n                  }\n                >\n                  <SelectTrigger className=\"bg-[#0e0e0e] border-[#333] text-white\">\n                    <SelectValue placeholder=\"Select location\" />\n                  </SelectTrigger>\n                  <SelectContent className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n                    {LOCATIONS.map((location) => (\n                      <SelectItem\n                        key={location}\n                        value={location}\n                        className=\"text-white hover:bg-[#bc9a64]/10\"\n                      >\n                        {location}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            )}\n\n            {/* Date */}\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-300\">Date</label>\n              <Input\n                type=\"date\"\n                value={formData.date}\n                onChange={(e) =>\n                  setFormData((prev) => ({ ...prev, date: e.target.value }))\n                }\n                className=\"bg-[#0e0e0e] border-[#333] text-white focus:border-[#bc9a64]\"\n              />\n            </div>\n\n            {/* Priority */}\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-300\">\n                Priority\n              </label>\n              <Select\n                value={formData.priority}\n                onValueChange={(value) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    priority: value as \"low\" | \"medium\" | \"high\",\n                  }))\n                }\n              >\n                <SelectTrigger className=\"bg-[#0e0e0e] border-[#333] text-white\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n                  <SelectItem\n                    value=\"low\"\n                    className=\"text-white hover:bg-[#bc9a64]/10\"\n                  >\n                    Low Priority\n                  </SelectItem>\n                  <SelectItem\n                    value=\"medium\"\n                    className=\"text-white hover:bg-[#bc9a64]/10\"\n                  >\n                    Medium Priority\n                  </SelectItem>\n                  <SelectItem\n                    value=\"high\"\n                    className=\"text-white hover:bg-[#bc9a64]/10\"\n                  >\n                    High Priority\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            {/* Visible Until */}\n            <div className=\"space-y-2\">\n              <label className=\"text-sm font-medium text-gray-300\">\n                Visible Until\n              </label>\n              <Input\n                type=\"date\"\n                value={formData.visible_until}\n                onChange={(e) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    visible_until: e.target.value,\n                  }))\n                }\n                className=\"bg-[#0e0e0e] border-[#333] text-white focus:border-[#bc9a64]\"\n              />\n            </div>\n          </div>\n\n          {/* Title */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium text-gray-300\">Title</label>\n            <Input\n              value={formData.title}\n              onChange={(e) =>\n                setFormData((prev) => ({ ...prev, title: e.target.value }))\n              }\n              className=\"bg-[#0e0e0e] border-[#333] text-white focus:border-[#bc9a64]\"\n              placeholder=\"Enter note title...\"\n              required\n            />\n          </div>\n\n          {/* Content */}\n          <div className=\"space-y-2\">\n            <label className=\"text-sm font-medium text-gray-300\">Content</label>\n            <Textarea\n              value={formData.content}\n              onChange={(e) =>\n                setFormData((prev) => ({ ...prev, content: e.target.value }))\n              }\n              className=\"bg-[#0e0e0e] border-[#333] text-white focus:border-[#bc9a64] h-32\"\n              placeholder=\"Write your note content here...\"\n              required\n            />\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex justify-end gap-4\">\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              onClick={onCancel}\n              className=\"border-[#333] text-gray-300 hover:bg-[#333]/50\"\n            >\n              <X className=\"w-4 h-4 mr-2\" />\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              disabled={saving || (!isAdmin && !userLocation)}\n              className=\"bg-gradient-to-r from-[#bc9a64] to-[#d4b876] hover:from-[#a8875a] hover:to-[#c1a56b] text-[#0e0e0e] font-semibold\"\n            >\n              {saving ? (\n                <div className=\"w-4 h-4 border-2 border-[#0e0e0e] border-t-transparent rounded-full animate-spin mr-2\" />\n              ) : (\n                <Save className=\"w-4 h-4 mr-2\" />\n              )}\n              {note ? \"Update\" : \"Create\"} Note\n            </Button>\n          </div>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n","import { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport {\n  Edit,\n  Trash2,\n  FileText,\n  Building2,\n  Calendar,\n  AlertCircle,\n} from \"lucide-react\";\nimport { format } from \"date-fns\";\nimport type { Note } from \"@/types/entities\";\n\ninterface NotesGridProps {\n  notes: Note[];\n  onEdit: (note: Note) => void;\n  onDelete: (noteId: string) => void;\n  showLocation?: boolean;\n}\n\nexport default function NotesGrid({\n  notes,\n  onEdit,\n  onDelete,\n  showLocation = false,\n}: NotesGridProps) {\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"high\":\n        return \"bg-red-500/20 text-red-400 border-red-500/30\";\n      case \"medium\":\n        return \"bg-yellow-500/20 text-yellow-400 border-yellow-500/30\";\n      case \"low\":\n        return \"bg-green-500/20 text-green-400 border-green-500/30\";\n      default:\n        return \"bg-gray-500/20 text-gray-400 border-gray-500/30\";\n    }\n  };\n\n  const getPriorityIcon = (priority: string) => {\n    switch (priority) {\n      case \"high\":\n        return <AlertCircle className=\"w-3 h-3\" />;\n      case \"medium\":\n        return <FileText className=\"w-3 h-3\" />;\n      case \"low\":\n        return <FileText className=\"w-3 h-3\" />;\n      default:\n        return <FileText className=\"w-3 h-3\" />;\n    }\n  };\n\n  if (notes.length === 0) {\n    return (\n      <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n        <CardContent className=\"p-12 text-center\">\n          <FileText className=\"w-16 h-16 text-gray-600 mx-auto mb-4\" />\n          <h3 className=\"text-xl font-semibold text-white mb-2\">\n            No Notes Found\n          </h3>\n          <p className=\"text-gray-400\">\n            No notes match your current filters. Try adjusting your search\n            criteria or create a new note.\n          </p>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {notes.map((note) => (\n        <Card\n          key={note.id}\n          className=\"bg-[#1a1a1a] border-[#bc9a64]/20 hover-lift\"\n        >\n          <CardContent className=\"p-6\">\n            {/* Header */}\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex items-center gap-2\">\n                <Badge className={getPriorityColor(note.priority)}>\n                  {getPriorityIcon(note.priority)}\n                  <span className=\"ml-1 capitalize\">{note.priority}</span>\n                </Badge>\n                {showLocation && (\n                  <Badge\n                    variant=\"outline\"\n                    className=\"text-gray-300 border-gray-600\"\n                  >\n                    <Building2 className=\"w-3 h-3 mr-1\" />\n                    {note.location}\n                  </Badge>\n                )}\n              </div>\n\n              <div className=\"flex items-center gap-1\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => onEdit(note)}\n                  className=\"text-gray-400 hover:text-[#bc9a64] hover:bg-[#bc9a64]/10 h-8 w-8 p-0\"\n                >\n                  <Edit className=\"w-4 h-4\" />\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => onDelete(note.id!)}\n                  className=\"text-gray-400 hover:text-red-400 hover:bg-red-500/10 h-8 w-8 p-0\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                </Button>\n              </div>\n            </div>\n\n            {/* Title */}\n            <h3 className=\"text-lg font-semibold text-white mb-3 line-clamp-2\">\n              {note.title}\n            </h3>\n\n            {/* Content */}\n            <p className=\"text-gray-300 text-sm mb-4 line-clamp-3\">\n              {note.content}\n            </p>\n\n            {/* Footer */}\n            <div className=\"flex items-center justify-between text-xs text-gray-500\">\n              <div className=\"flex items-center gap-1\">\n                <Calendar className=\"w-3 h-3\" />\n                <span>\n                  {note.created_date\n                    ? format(new Date(note.created_date), \"MMM d, yyyy\")\n                    : \"No date\"}\n                </span>\n              </div>\n\n              {note.visible_until && (\n                <div className=\"flex items-center gap-1\">\n                  <span>Until:</span>\n                  <span>{format(new Date(note.visible_until), \"MMM d\")}</span>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}\n","import { Card, CardContent } from \"@/components/ui/card\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Button } from \"@/components/ui/button\";\nimport { Filter } from \"lucide-react\";\nimport { LOCATIONS } from \"@/types/entities\";\n\ninterface NotesFiltersProps {\n  filters: {\n    location: string;\n    priority: string;\n    dateRange: string;\n  };\n  onFiltersChange: (filters: any) => void;\n  isAdmin?: boolean;\n  userLocation: string;\n}\n\nexport default function NotesFilters({\n  filters,\n  onFiltersChange,\n  isAdmin,\n  userLocation,\n}: NotesFiltersProps) {\n  const updateFilter = (key: string, value: string) => {\n    onFiltersChange({\n      ...filters,\n      [key]: value,\n    });\n  };\n\n  return (\n    <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n      <CardContent className=\"p-6\">\n        <div className=\"flex items-center gap-4 flex-wrap\">\n          <div className=\"flex items-center gap-2\">\n            <Filter className=\"w-4 h-4 text-[#bc9a64]\" />\n            <span className=\"text-sm font-medium text-gray-300\">Filters:</span>\n          </div>\n\n          {/* Location Filter - Only show for admins */}\n          {isAdmin && (\n            <div className=\"flex items-center gap-2\">\n              <label className=\"text-sm text-gray-400\">Location:</label>\n              <Select\n                value={filters.location}\n                onValueChange={(value) => updateFilter(\"location\", value)}\n              >\n                <SelectTrigger className=\"w-40 bg-[#0e0e0e] border-[#333] text-white\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n                  <SelectItem\n                    value=\"all\"\n                    className=\"text-white hover:bg-[#bc9a64]/10\"\n                  >\n                    All Locations\n                  </SelectItem>\n                  {LOCATIONS.map((location) => (\n                    <SelectItem\n                      key={location}\n                      value={location}\n                      className=\"text-white hover:bg-[#bc9a64]/10\"\n                    >\n                      {location}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n          )}\n\n          {/* Priority Filter */}\n          <div className=\"flex items-center gap-2\">\n            <label className=\"text-sm text-gray-400\">Priority:</label>\n            <Select\n              value={filters.priority}\n              onValueChange={(value) => updateFilter(\"priority\", value)}\n            >\n              <SelectTrigger className=\"w-32 bg-[#0e0e0e] border-[#333] text-white\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n                <SelectItem\n                  value=\"all\"\n                  className=\"text-white hover:bg-[#bc9a64]/10\"\n                >\n                  All\n                </SelectItem>\n                <SelectItem\n                  value=\"high\"\n                  className=\"text-white hover:bg-[#bc9a64]/10\"\n                >\n                  High\n                </SelectItem>\n                <SelectItem\n                  value=\"medium\"\n                  className=\"text-white hover:bg-[#bc9a64]/10\"\n                >\n                  Medium\n                </SelectItem>\n                <SelectItem\n                  value=\"low\"\n                  className=\"text-white hover:bg-[#bc9a64]/10\"\n                >\n                  Low\n                </SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Date Range Filter */}\n          <div className=\"flex items-center gap-2\">\n            <label className=\"text-sm text-gray-400\">Date:</label>\n            <Select\n              value={filters.dateRange}\n              onValueChange={(value) => updateFilter(\"dateRange\", value)}\n            >\n              <SelectTrigger className=\"w-32 bg-[#0e0e0e] border-[#333] text-white\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n                <SelectItem\n                  value=\"all\"\n                  className=\"text-white hover:bg-[#bc9a64]/10\"\n                >\n                  All Time\n                </SelectItem>\n                <SelectItem\n                  value=\"today\"\n                  className=\"text-white hover:bg-[#bc9a64]/10\"\n                >\n                  Today\n                </SelectItem>\n                <SelectItem\n                  value=\"week\"\n                  className=\"text-white hover:bg-[#bc9a64]/10\"\n                >\n                  This Week\n                </SelectItem>\n                <SelectItem\n                  value=\"month\"\n                  className=\"text-white hover:bg-[#bc9a64]/10\"\n                >\n                  This Month\n                </SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Clear Filters */}\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() =>\n              onFiltersChange({\n                location: isAdmin ? \"all\" : userLocation,\n                priority: \"all\",\n                dateRange: \"all\",\n              })\n            }\n            className=\"border-[#bc9a64]/20 text-gray-300 hover:bg-[#bc9a64]/10\"\n          >\n            Clear\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { format } from \"date-fns\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { NoteEntity } from \"@/services/entities\";\nimport { AuditLogger } from \"@/components/Utils/AuditLogger\";\nimport { logger } from \"@/utils/logger\";\nimport type { Note } from \"@/types/entities\";\n\nimport NotesHeader from \"@/components/Notes/NotesHeader\";\nimport NoteForm from \"@/components/Notes/NoteForm\";\nimport NotesGrid from \"@/components/Notes/NotesGrid\";\nimport NotesFilters from \"@/components/Notes/NotesFilters\";\n\nexport default function Notes() {\n  const [notes, setNotes] = useState<Note[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showForm, setShowForm] = useState(false);\n  const [editingNote, setEditingNote] = useState<Note | null>(null);\n  const [filters, setFilters] = useState({\n    location: \"all\",\n    priority: \"all\",\n    dateRange: \"all\",\n  });\n\n  const { user, loading: authLoading } = useAuth();\n\n  useEffect(() => {\n    if (user) {\n      loadData();\n    }\n  }, [user]);\n\n  const loadData = async () => {\n    if (!user) return;\n\n    setLoading(true);\n    try {\n      const allNotes = await NoteEntity.list();\n\n      // Filter notes based on user permissions and visibility\n      const today = new Date();\n      const filteredNotes = allNotes\n        .filter((note) => {\n          // Check visibility date\n          if (note.visible_until && new Date(note.visible_until) < today) {\n            return false;\n          }\n\n          // Filter by location access\n          if (\n            !user.is_admin &&\n            note.location !== (user.location || \"Flatiron\")\n          ) {\n            return false;\n          }\n\n          return true;\n        })\n        .sort(\n          (a, b) =>\n            new Date(b.created_date || 0).getTime() -\n            new Date(a.created_date || 0).getTime()\n        );\n\n      setNotes(filteredNotes);\n    } catch (error) {\n      logger.error(\"Error loading notes data\", error);\n    }\n    setLoading(false);\n  };\n\n  const handleSaveNote = async (noteData: Partial<Note>) => {\n    try {\n      if (editingNote) {\n        const oldData = { ...editingNote };\n        await NoteEntity.update(editingNote.id!, noteData);\n        await AuditLogger.logNote(\"update\", editingNote.id!, oldData, noteData);\n      } else {\n        if (!user?.is_admin) {\n          noteData.location = user?.location || \"Flatiron\";\n        }\n        const newNote = await NoteEntity.create(\n          noteData as Omit<Note, \"id\" | \"created_at\" | \"updated_at\">\n        );\n        await AuditLogger.logNote(\"create\", newNote.id!, null, noteData);\n      }\n\n      setShowForm(false);\n      setEditingNote(null);\n      await loadData();\n    } catch (error) {\n      logger.error(\"Error saving note\", error);\n    }\n  };\n\n  const handleEditNote = (note: Note) => {\n    setEditingNote(note);\n    setShowForm(true);\n  };\n\n  const handleDeleteNote = async (noteId: string) => {\n    if (window.confirm(\"Are you sure you want to delete this note?\")) {\n      try {\n        const oldData = notes.find((n) => n.id === noteId);\n        await NoteEntity.delete(noteId);\n        await AuditLogger.logNote(\"delete\", noteId, oldData, null);\n        await loadData();\n      } catch (error) {\n        logger.error(\"Error deleting note\", error);\n      }\n    }\n  };\n\n  const getFilteredNotes = () => {\n    return notes.filter((note) => {\n      // Location filter\n      if (filters.location !== \"all\" && note.location !== filters.location) {\n        return false;\n      }\n\n      // Priority filter\n      if (filters.priority !== \"all\" && note.priority !== filters.priority) {\n        return false;\n      }\n\n      // Date range filter\n      if (filters.dateRange !== \"all\") {\n        const noteDate = new Date(note.created_date || 0);\n        const today = new Date();\n\n        switch (filters.dateRange) {\n          case \"today\":\n            if (\n              format(noteDate, \"yyyy-MM-dd\") !== format(today, \"yyyy-MM-dd\")\n            ) {\n              return false;\n            }\n            break;\n          case \"week\":\n            const weekAgo = new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000);\n            if (noteDate < weekAgo) {\n              return false;\n            }\n            break;\n          case \"month\":\n            const monthAgo = new Date(\n              today.getTime() - 30 * 24 * 60 * 60 * 1000\n            );\n            if (noteDate < monthAgo) {\n              return false;\n            }\n            break;\n          default:\n            break;\n        }\n      }\n\n      return true;\n    });\n  };\n\n  const filteredNotes = getFilteredNotes();\n\n  if (authLoading || loading) {\n    return (\n      <div className=\"min-h-screen bg-[#0e0e0e] flex items-center justify-center\">\n        <div className=\"w-8 h-8 border-2 border-[#bc9a64] border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0e0e0e] text-white p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        {/* Header */}\n        <NotesHeader\n          isAdmin={user?.is_admin}\n          userLocation={user?.location || \"Flatiron\"}\n          onNewNote={() => setShowForm(true)}\n        />\n\n        {/* Filters */}\n        <NotesFilters\n          filters={filters}\n          onFiltersChange={setFilters}\n          isAdmin={user?.is_admin}\n          userLocation={user?.location || \"Flatiron\"}\n        />\n\n        {/* Note Form */}\n        {showForm && (\n          <NoteForm\n            note={editingNote || undefined}\n            onSave={handleSaveNote}\n            onCancel={() => {\n              setShowForm(false);\n              setEditingNote(null);\n            }}\n            isAdmin={user?.is_admin || false}\n            userLocation={user?.location || \"Flatiron\"}\n          />\n        )}\n\n        {/* Notes Grid */}\n        <NotesGrid\n          notes={filteredNotes}\n          onEdit={handleEditNote}\n          onDelete={handleDeleteNote}\n          showLocation={user?.is_admin}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["NotesHeader","isAdmin","userLocation","onNewNote","jsxs","className","children","jsx","FileText","jsxRuntimeExports","Button","onClick","Plus","LOCATIONS","NoteForm","note","onSave","onCancel","formData","setFormData","useState","location","date","format","Date","title","content","priority","visible_until","addDays","saving","setSaving","Card","CardHeader","CardTitle","CardContent","onSubmit","async","e","preventDefault","Select","value","onValueChange","prev","SelectTrigger","SelectValue","placeholder","SelectContent","map","SelectItem","Input","type","onChange","target","required","Textarea","variant","X","disabled","Save","NotesGrid","notes","onEdit","onDelete","showLocation","getPriorityColor","length","Badge","AlertCircle","Building2","size","Edit","id","Trash2","Calendar","created_date","NotesFilters","filters","onFiltersChange","updateFilter","key","Filter","dateRange","Notes","setNotes","loading","setLoading","showForm","setShowForm","editingNote","setEditingNote","setFilters","user","authLoading","useAuth","useEffect","loadData","allNotes","NoteEntity","list","today","filteredNotes","filter","is_admin","sort","a","b","getTime","error","logger","noteDate","noteData","oldData","update","AuditLogger","logNote","newNote","create","noteId","window","confirm","find","n","delete"],"mappings":"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"}