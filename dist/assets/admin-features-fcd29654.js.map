{"version":3,"file":"admin-features-fcd29654.js","sources":["../../src/config/firebase.ts","../../src/utils/logger.ts","../../src/services/firebase.ts","../../src/services/entities.ts","../../src/components/ui/alert.tsx","../../src/components/Utils/AuditLogger.tsx","../../src/hooks/useAuth.ts","../../src/types/entities.ts","../../src/components/ui/badge.tsx","../../src/hooks/useUserManagement.ts","../../src/pages/UserManagement.tsx","../../src/pages/AuditLogs.tsx","../../src/pages/Settings.tsx"],"sourcesContent":["// Import only the Firebase functions we need for better tree shaking\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth } from \"firebase/auth\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey:\n    import.meta.env.VITE_FIREBASE_API_KEY ||\n    \"AIzaSyDKo06Dx1V7lIEG4LG8Gd1WjRhDHJHSaoc\",\n  authDomain:\n    import.meta.env.VITE_FIREBASE_AUTH_DOMAIN || \"tallymail.firebaseapp.com\",\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID || \"tallymail\",\n  storageBucket:\n    import.meta.env.VITE_FIREBASE_STORAGE_BUCKET ||\n    \"tallymail.firebasestorage.app\",\n  messagingSenderId:\n    import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID || \"212729064673\",\n  appId:\n    import.meta.env.VITE_FIREBASE_APP_ID ||\n    \"1:212729064673:web:8c082966575979a8d01ba0\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase services\nexport const db = getFirestore(app);\nexport const auth = getAuth(app);\n\nexport default app;\n","/**\n * Secure logging utility that prevents sensitive data exposure in production\n */\n\ntype LogLevel = \"error\" | \"warn\" | \"info\" | \"debug\";\n\nconst LOG_LEVELS = {\n  ERROR: \"error\" as const,\n  WARN: \"warn\" as const,\n  INFO: \"info\" as const,\n  DEBUG: \"debug\" as const,\n};\n\nclass SecureLogger {\n  private isDevelopment: boolean;\n  private enableLogging: boolean;\n\n  constructor() {\n    this.isDevelopment = import.meta.env.DEV || false;\n    this.enableLogging =\n      import.meta.env.VITE_ENABLE_LOGGING === \"true\" || this.isDevelopment;\n  }\n\n  private sanitizeData(data: any): any {\n    if (!data) return data;\n\n    // Remove sensitive fields\n    const sensitiveFields = [\"password\", \"token\", \"apiKey\", \"secret\", \"key\"];\n\n    if (typeof data === \"object\") {\n      const sanitized = { ...data };\n      sensitiveFields.forEach((field) => {\n        if (sanitized[field]) {\n          sanitized[field] = \"[REDACTED]\";\n        }\n      });\n      return sanitized;\n    }\n\n    return data;\n  }\n\n  private log(level: LogLevel, message: string, data?: any): void {\n    if (!this.enableLogging) return;\n\n    const timestamp = new Date().toISOString();\n    const sanitizedData = this.sanitizeData(data);\n\n    if (this.isDevelopment) {\n      // Full logging in development\n      switch (level) {\n        case \"error\":\n          console.error(`[${timestamp}] ${message}`, sanitizedData || \"\");\n          break;\n        case \"warn\":\n          console.warn(`[${timestamp}] ${message}`, sanitizedData || \"\");\n          break;\n        case \"info\":\n          console.info(`[${timestamp}] ${message}`, sanitizedData || \"\");\n          break;\n        case \"debug\":\n          console.debug(`[${timestamp}] ${message}`, sanitizedData || \"\");\n          break;\n        default:\n          console.log(`[${timestamp}] ${message}`, sanitizedData || \"\");\n      }\n    } else {\n      // In production, send to error tracking service instead of console\n      // This is where you'd integrate with Sentry, LogRocket, etc.\n      this.sendToErrorTracking(level, message, sanitizedData);\n    }\n  }\n\n  private sendToErrorTracking(\n    level: string,\n    message: string,\n    data?: any\n  ): void {\n    // TODO: Integrate with error tracking service (Sentry, LogRocket, etc.)\n    // For now, we'll store in sessionStorage for debugging\n    try {\n      const logEntry = {\n        level,\n        message,\n        data,\n        timestamp: new Date().toISOString(),\n        userAgent: navigator.userAgent,\n        url: window.location.href,\n      };\n\n      const existingLogs = JSON.parse(\n        sessionStorage.getItem(\"app_logs\") || \"[]\"\n      );\n      existingLogs.push(logEntry);\n\n      // Keep only last 50 logs to prevent storage overflow\n      if (existingLogs.length > 50) {\n        existingLogs.splice(0, existingLogs.length - 50);\n      }\n\n      sessionStorage.setItem(\"app_logs\", JSON.stringify(existingLogs));\n    } catch (error) {\n      // Fail silently if logging fails\n    }\n  }\n\n  error(message: string, error?: any): void {\n    this.log(LOG_LEVELS.ERROR, message, error);\n  }\n\n  warn(message: string, data?: any): void {\n    this.log(LOG_LEVELS.WARN, message, data);\n  }\n\n  info(message: string, data?: any): void {\n    this.log(LOG_LEVELS.INFO, message, data);\n  }\n\n  debug(message: string, data?: any): void {\n    this.log(LOG_LEVELS.DEBUG, message, data);\n  }\n\n  // Method to get logs for debugging (development only)\n  getLogs(): any[] {\n    if (!this.isDevelopment) return [];\n\n    try {\n      return JSON.parse(sessionStorage.getItem(\"app_logs\") || \"[]\");\n    } catch {\n      return [];\n    }\n  }\n\n  // Method to clear logs\n  clearLogs(): void {\n    if (this.isDevelopment) {\n      sessionStorage.removeItem(\"app_logs\");\n    }\n  }\n}\n\n// Export singleton instance\nexport const logger = new SecureLogger();\n\n// Export for testing\nexport { SecureLogger };\n","import {\n  collection,\n  doc,\n  getDocs,\n  getDoc,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n  query,\n  where,\n  orderBy,\n  Timestamp,\n} from \"firebase/firestore\";\nimport {\n  onAuthStateChanged,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n} from \"firebase/auth\";\nimport { db, auth } from \"@/config/firebase\";\nimport { logger } from \"@/utils/logger\";\nimport type {\n  SalesRecord,\n  Note,\n  User,\n  AuditLog,\n  Location,\n} from \"@/types/entities\";\n\n// Collections\nconst COLLECTIONS = {\n  SALES_RECORDS: \"salesRecords\",\n  NOTES: \"notes\",\n  USERS: \"users\",\n  AUDIT_LOGS: \"auditLogs\",\n} as const;\n\n// Helper function to convert Firestore timestamp to ISO string\nconst timestampToString = (timestamp: any): string => {\n  if (timestamp?.toDate) {\n    return timestamp.toDate().toISOString();\n  }\n  return new Date().toISOString();\n};\n\n// Helper function to convert data from Firestore\nconst convertFirestoreData = (doc: any): any => {\n  const data = doc.data();\n  return {\n    id: doc.id,\n    ...data,\n    created_at: timestampToString(data.created_at),\n    updated_at: timestampToString(data.updated_at),\n  };\n};\n\n// Base Firebase service class\nabstract class BaseFirebaseService<T> {\n  protected abstract collectionName: string;\n\n  async list(): Promise<T[]> {\n    try {\n      const querySnapshot = await getDocs(collection(db, this.collectionName));\n      return querySnapshot.docs.map(convertFirestoreData);\n    } catch (error) {\n      logger.error(`Error fetching ${this.collectionName}`, error);\n      throw new Error(`Failed to fetch ${this.collectionName}`);\n    }\n  }\n\n  async get(id: string): Promise<T> {\n    try {\n      const docRef = doc(db, this.collectionName, id);\n      const docSnap = await getDoc(docRef);\n\n      if (!docSnap.exists()) {\n        throw new Error(`${this.collectionName} not found`);\n      }\n\n      return convertFirestoreData(docSnap);\n    } catch (error) {\n      logger.error(`Error fetching ${this.collectionName}`, error);\n      throw error;\n    }\n  }\n\n  async create(data: Omit<T, \"id\" | \"created_at\" | \"updated_at\">): Promise<T> {\n    try {\n      const now = Timestamp.now();\n      const docData = {\n        ...data,\n        created_at: now,\n        updated_at: now,\n      };\n\n      const docRef = await addDoc(collection(db, this.collectionName), docData);\n      const newDoc = await getDoc(docRef);\n\n      return convertFirestoreData(newDoc);\n    } catch (error) {\n      logger.error(`Error creating ${this.collectionName}`, error);\n      throw new Error(`Failed to create ${this.collectionName}`);\n    }\n  }\n\n  async update(id: string, data: Partial<T>): Promise<T> {\n    try {\n      const docRef = doc(db, this.collectionName, id);\n      const updateData = {\n        ...data,\n        updated_at: Timestamp.now(),\n      };\n\n      await updateDoc(docRef, updateData);\n      const updatedDoc = await getDoc(docRef);\n\n      return convertFirestoreData(updatedDoc);\n    } catch (error) {\n      logger.error(`Error updating ${this.collectionName}`, error);\n      throw new Error(`Failed to update ${this.collectionName}`);\n    }\n  }\n\n  async delete(id: string): Promise<void> {\n    try {\n      const docRef = doc(db, this.collectionName, id);\n      await deleteDoc(docRef);\n    } catch (error) {\n      logger.error(`Error deleting ${this.collectionName}`, error);\n      throw new Error(`Failed to delete ${this.collectionName}`);\n    }\n  }\n}\n\n// Sales Record Firebase Service\nclass SalesRecordFirebaseService extends BaseFirebaseService<SalesRecord> {\n  protected collectionName = COLLECTIONS.SALES_RECORDS;\n\n  async getByLocation(location: Location): Promise<SalesRecord[]> {\n    try {\n      const q = query(\n        collection(db, this.collectionName),\n        where(\"location\", \"==\", location),\n        orderBy(\"date\", \"desc\")\n      );\n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(convertFirestoreData);\n    } catch (error) {\n      logger.error(\"Error fetching sales by location\", error);\n      throw new Error(\"Failed to fetch sales by location\");\n    }\n  }\n\n  async getByDateRange(\n    startDate: string,\n    endDate: string\n  ): Promise<SalesRecord[]> {\n    try {\n      const q = query(\n        collection(db, this.collectionName),\n        where(\"date\", \">=\", startDate),\n        where(\"date\", \"<=\", endDate),\n        orderBy(\"date\", \"desc\")\n      );\n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(convertFirestoreData);\n    } catch (error) {\n      logger.error(\"Error fetching sales by date range\", error);\n      throw new Error(\"Failed to fetch sales by date range\");\n    }\n  }\n}\n\n// Note Firebase Service\nclass NoteFirebaseService extends BaseFirebaseService<Note> {\n  protected collectionName = COLLECTIONS.NOTES;\n\n  async getByLocation(location: Location): Promise<Note[]> {\n    try {\n      const q = query(\n        collection(db, this.collectionName),\n        where(\"location\", \"==\", location),\n        orderBy(\"created_at\", \"desc\")\n      );\n      const querySnapshot = await getDocs(q);\n      return querySnapshot.docs.map(convertFirestoreData);\n    } catch (error) {\n      logger.error(\"Error fetching notes by location\", error);\n      throw new Error(\"Failed to fetch notes by location\");\n    }\n  }\n}\n\n// User Firebase Service\nclass UserFirebaseService extends BaseFirebaseService<User> {\n  protected collectionName = COLLECTIONS.USERS;\n\n  async me(): Promise<User> {\n    return new Promise((resolve, reject) => {\n      const unsubscribe = onAuthStateChanged(\n        auth,\n        async (firebaseUser: any) => {\n          unsubscribe();\n\n          if (!firebaseUser) {\n            reject(new Error(\"Not authenticated\"));\n            return;\n          }\n\n          try {\n            // Check if user exists in our database\n            const q = query(\n              collection(db, this.collectionName),\n              where(\"email\", \"==\", firebaseUser.email)\n            );\n            const querySnapshot = await getDocs(q);\n\n            if (querySnapshot.empty) {\n              // Check if this is the first user in the system\n              const isFirstUser = await this.isFirstUser();\n\n              // Create new user if doesn't exist\n              const newUser = await this.create({\n                email: firebaseUser.email!,\n                full_name: firebaseUser.displayName || \"\",\n                location: \"Flatiron\" as Location, // Default location\n                is_admin: isFirstUser, // Make first user admin\n              });\n              resolve(newUser);\n            } else {\n              // Return existing user\n              const userDoc = querySnapshot.docs[0];\n              resolve(convertFirestoreData(userDoc));\n            }\n          } catch (error) {\n            reject(error);\n          }\n        }\n      );\n    });\n  }\n\n  async login(): Promise<User> {\n    try {\n      const provider = new GoogleAuthProvider();\n      const result = await signInWithPopup(auth, provider);\n\n      if (!result.user.email) {\n        throw new Error(\"No email found in Google account\");\n      }\n\n      // Check if user exists in our database\n      const q = query(\n        collection(db, this.collectionName),\n        where(\"email\", \"==\", result.user.email)\n      );\n      const querySnapshot = await getDocs(q);\n\n      if (querySnapshot.empty) {\n        // Check if this is the first user in the system\n        const isFirstUser = await this.isFirstUser();\n\n        // Create new user\n        return await this.create({\n          email: result.user.email,\n          full_name: result.user.displayName || \"\",\n          location: \"Flatiron\" as Location,\n          is_admin: isFirstUser, // Make first user admin\n        });\n      } else {\n        // Return existing user\n        const userDoc = querySnapshot.docs[0];\n        return convertFirestoreData(userDoc);\n      }\n    } catch (error) {\n      logger.error(\"Error during login\", error);\n      throw new Error(\"Failed to login\");\n    }\n  }\n\n  async logout(): Promise<void> {\n    try {\n      await signOut(auth);\n    } catch (error) {\n      logger.error(\"Error during logout\", error);\n      throw new Error(\"Failed to logout\");\n    }\n  }\n\n  async getByEmail(email: string): Promise<User | null> {\n    try {\n      const q = query(\n        collection(db, this.collectionName),\n        where(\"email\", \"==\", email)\n      );\n      const querySnapshot = await getDocs(q);\n\n      if (querySnapshot.empty) {\n        return null;\n      }\n\n      return convertFirestoreData(querySnapshot.docs[0]);\n    } catch (error) {\n      logger.error(\"Error fetching user by email\", error);\n      throw new Error(\"Failed to fetch user by email\");\n    }\n  }\n\n  private async isFirstUser(): Promise<boolean> {\n    try {\n      const querySnapshot = await getDocs(collection(db, this.collectionName));\n      return querySnapshot.empty;\n    } catch (error) {\n      logger.error(\"Error checking if first user\", error);\n      // If we can't check, default to false for security\n      return false;\n    }\n  }\n\n  async promoteToAdmin(email: string): Promise<User> {\n    try {\n      const user = await this.getByEmail(email);\n      if (!user || !user.id) {\n        throw new Error(\"User not found\");\n      }\n\n      return await this.update(user.id, { is_admin: true });\n    } catch (error) {\n      logger.error(\"Error promoting user to admin\", error);\n      throw new Error(\"Failed to promote user to admin\");\n    }\n  }\n}\n\n// Audit Log Firebase Service\nclass AuditLogFirebaseService extends BaseFirebaseService<AuditLog> {\n  protected collectionName = COLLECTIONS.AUDIT_LOGS;\n\n  async logAction(\n    action:\n      | \"create\"\n      | \"update\"\n      | \"delete\"\n      | \"login\"\n      | \"logout\"\n      | \"user_created\"\n      | \"user_updated\",\n    entityType: \"SalesRecord\" | \"Note\" | \"User\",\n    entityId: string,\n    oldData?: any,\n    newData?: any\n  ): Promise<AuditLog> {\n    try {\n      const currentUser = auth.currentUser;\n      if (!currentUser) {\n        throw new Error(\"No authenticated user for audit log\");\n      }\n\n      const auditData = {\n        action_type: action,\n        entity_type: entityType,\n        entity_id: entityId,\n        user_email: currentUser.email!,\n        old_values: oldData || undefined,\n        new_values: newData || undefined,\n        location: \"System\",\n        details: `${action} performed on ${entityType}`,\n        ip_address: \"Unknown\",\n      };\n\n      return await this.create(auditData);\n    } catch (error) {\n      logger.error(\"Error creating audit log\", error);\n      throw new Error(\"Failed to create audit log\");\n    }\n  }\n}\n\n// Export service instances\nexport const SalesRecordFirebaseEntity = new SalesRecordFirebaseService();\nexport const NoteFirebaseEntity = new NoteFirebaseService();\nexport const UserFirebaseEntity = new UserFirebaseService();\nexport const AuditLogFirebaseEntity = new AuditLogFirebaseService();\n\n// Auth state observer\nexport const onAuthStateChange = (callback: (user: any) => void) => {\n  return onAuthStateChanged(auth, callback);\n};\n","// Firebase-based entity services\nimport {\n  SalesRecordFirebaseEntity,\n  NoteFirebaseEntity,\n  UserFirebaseEntity,\n  AuditLogFirebaseEntity,\n} from \"./firebase\";\n\n// Export Firebase services as the main entities\nexport const SalesRecordEntity = SalesRecordFirebaseEntity;\nexport const NoteEntity = NoteFirebaseEntity;\nexport const UserEntity = UserFirebaseEntity;\nexport const AuditLogEntity = AuditLogFirebaseEntity;\n\n// Legacy exports for backward compatibility\nexport { SalesRecordFirebaseEntity as SalesRecord };\nexport { NoteFirebaseEntity as Note };\nexport { UserFirebaseEntity as User };\nexport { AuditLogFirebaseEntity as AuditLog };\n","import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = \"Alert\";\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = \"AlertTitle\";\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = \"AlertDescription\";\n\nexport { Alert, AlertTitle, AlertDescription };\n","import { AuditLogFirebaseEntity } from \"@/services/firebase\";\n\nexport class AuditLogger {\n  static async log(\n    action:\n      | \"create\"\n      | \"update\"\n      | \"delete\"\n      | \"login\"\n      | \"logout\"\n      | \"user_created\"\n      | \"user_updated\",\n    entityType: \"SalesRecord\" | \"Note\" | \"User\",\n    entityId: string,\n    oldValues: Record<string, any> | null,\n    newValues: Record<string, any> | null\n  ) {\n    try {\n      await AuditLogFirebaseEntity.logAction(\n        action,\n        entityType,\n        entityId,\n        oldValues,\n        newValues\n      );\n    } catch (error) {\n      console.error(\"Failed to log audit event:\", error);\n    }\n  }\n\n  static async logSalesRecord(\n    action: \"create\" | \"update\" | \"delete\",\n    recordId: string,\n    oldData: any,\n    newData: any\n  ) {\n    await this.log(action, \"SalesRecord\", recordId, oldData, newData);\n  }\n\n  static async logNote(\n    action: \"create\" | \"update\" | \"delete\",\n    noteId: string,\n    oldData: any,\n    newData: any\n  ) {\n    await this.log(action, \"Note\", noteId, oldData, newData);\n  }\n\n  static async logUser(\n    action: \"user_created\" | \"user_updated\" | \"delete\",\n    userId: string,\n    oldData: any,\n    newData: any\n  ) {\n    await this.log(action, \"User\", userId, oldData, newData);\n  }\n\n  static async logLogin() {\n    await this.log(\"login\", \"User\", \"system\", null, null);\n  }\n\n  static async logLogout() {\n    await this.log(\"logout\", \"User\", \"system\", null, null);\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport type { User } from \"@/types/entities\";\nimport { UserEntity } from \"@/services/entities\";\n\nexport function useAuth() {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  const loadUser = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const currentUser = await UserEntity.me();\n      setUser(currentUser);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Failed to load user\");\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await UserEntity.logout();\n      setUser(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Failed to logout\");\n    }\n  };\n\n  return {\n    user,\n    loading,\n    error,\n    isAuthenticated: !!user,\n    isAdmin: user?.is_admin || false,\n    userLocation: user?.location,\n    logout,\n    refetch: loadUser,\n  };\n}\n","// Location enum used across all entities\nexport const LOCATIONS = [\n  \"Flatiron\",\n  \"MidEast\",\n  \"Midtown\",\n  \"UWS\",\n  \"Back Bay\",\n  \"North Station\",\n  \"Miami Beach\",\n  \"eStore\",\n  \"Location 9\",\n  \"Location 10\",\n] as const;\n\nexport type Location = (typeof LOCATIONS)[number];\n\n// Sales Record Entity\nexport interface SalesRecord {\n  id?: string;\n  location: Location;\n  date: string; // ISO date string\n  daily_sales: number;\n  treatments_count?: number;\n  notes?: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\n// Note Entity\nexport interface Note {\n  id?: string;\n  location: Location;\n  date?: string; // ISO date string\n  title: string;\n  content: string;\n  visible_until?: string; // ISO date string\n  priority: \"low\" | \"medium\" | \"high\";\n  created_date?: string;\n  updated_date?: string;\n}\n\n// User Entity\nexport interface User {\n  id?: string;\n  email: string;\n  full_name?: string;\n  location?: Location;\n  is_admin: boolean;\n  created_at?: string;\n  updated_at?: string;\n}\n\n// Audit Log Entity\nexport interface AuditLog {\n  id?: string;\n  user_email: string;\n  action_type:\n    | \"create\"\n    | \"update\"\n    | \"delete\"\n    | \"login\"\n    | \"logout\"\n    | \"user_created\"\n    | \"user_updated\";\n  entity_type?: \"SalesRecord\" | \"Note\" | \"User\";\n  entity_id?: string;\n  old_values?: Record<string, any>;\n  new_values?: Record<string, any>;\n  location?: string;\n  ip_address?: string;\n  details?: string;\n  created_at?: string;\n}\n","import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","import { useState, useEffect } from \"react\";\nimport type { User, Location } from \"@/types/entities\";\nimport { UserEntity } from \"@/services/entities\";\nimport { AuditLogger } from \"@/components/Utils/AuditLogger\";\n\ninterface InviteUserData {\n  email: string;\n  full_name: string;\n  location: Location;\n  is_admin: boolean;\n}\n\nexport function useUserManagement() {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  const loadUsers = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const allUsers = await UserEntity.list();\n      setUsers(allUsers);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : \"Failed to load users\");\n      setUsers([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const inviteUser = async (userData: InviteUserData): Promise<User> => {\n    try {\n      const newUser = await UserEntity.create(userData);\n      await AuditLogger.logUser(\"user_created\", newUser.id!, null, userData);\n      await loadUsers(); // Refresh the list\n      return newUser;\n    } catch (err) {\n      throw new Error(\n        err instanceof Error ? err.message : \"Failed to invite user\"\n      );\n    }\n  };\n\n  const updateUserAdmin = async (\n    userId: string,\n    isAdmin: boolean\n  ): Promise<void> => {\n    try {\n      const oldData = users.find((u) => u.id === userId);\n      if (!oldData) throw new Error(\"User not found\");\n\n      const newData = { ...oldData, is_admin: isAdmin };\n      await UserEntity.update(userId, { is_admin: isAdmin });\n      await AuditLogger.logUser(\"user_updated\", userId, oldData, newData);\n      await loadUsers(); // Refresh the list\n    } catch (err) {\n      throw new Error(\n        err instanceof Error ? err.message : \"Failed to update user privileges\"\n      );\n    }\n  };\n\n  const updateUserLocation = async (\n    userId: string,\n    location: Location\n  ): Promise<void> => {\n    try {\n      const oldData = users.find((u) => u.id === userId);\n      if (!oldData) throw new Error(\"User not found\");\n\n      const newData = { ...oldData, location };\n      await UserEntity.update(userId, { location });\n      await AuditLogger.logUser(\"user_updated\", userId, oldData, newData);\n      await loadUsers(); // Refresh the list\n    } catch (err) {\n      throw new Error(\n        err instanceof Error ? err.message : \"Failed to update user location\"\n      );\n    }\n  };\n\n  const deleteUser = async (userId: string): Promise<void> => {\n    try {\n      const oldData = users.find((u) => u.id === userId);\n      if (!oldData) throw new Error(\"User not found\");\n\n      await UserEntity.delete(userId);\n      await AuditLogger.logUser(\"delete\", userId, oldData, null);\n      await loadUsers(); // Refresh the list\n    } catch (err) {\n      throw new Error(\n        err instanceof Error ? err.message : \"Failed to delete user\"\n      );\n    }\n  };\n\n  return {\n    users,\n    loading,\n    error,\n    refetch: loadUsers,\n    inviteUser,\n    updateUserAdmin,\n    updateUserLocation,\n    deleteUser,\n  };\n}\n","import { Users, Shield, Building2, Crown } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useUserManagement } from \"@/hooks/useUserManagement\";\n\nexport default function UserManagement() {\n  const { user: currentUser, loading: authLoading } = useAuth();\n  const { users, loading: usersLoading, updateUserAdmin } = useUserManagement();\n\n  const handleToggleAdmin = async (\n    userId: string,\n    currentAdminStatus: boolean\n  ) => {\n    try {\n      await updateUserAdmin(userId, !currentAdminStatus);\n    } catch (error) {\n      console.error(\"Error toggling admin status:\", error);\n    }\n  };\n\n  if (authLoading || usersLoading) {\n    return (\n      <div className=\"min-h-screen bg-[#0e0e0e] flex items-center justify-center\">\n        <div className=\"w-8 h-8 border-2 border-[#bc9a64] border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (!currentUser?.is_admin) {\n    return (\n      <div className=\"min-h-screen bg-[#0e0e0e] text-white p-6\">\n        <div className=\"max-w-2xl mx-auto mt-20\">\n          <Alert className=\"border-red-500/20 bg-red-500/10\">\n            <Shield className=\"h-4 w-4 text-red-400\" />\n            <AlertDescription className=\"text-red-300\">\n              Access denied. Only administrators can access user management.\n            </AlertDescription>\n          </Alert>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0e0e0e] text-white p-6\">\n      <div className=\"max-w-6xl mx-auto space-y-8\">\n        {/* Header */}\n        <div>\n          <h1 className=\"text-3xl font-bold mb-2 flex items-center gap-3\">\n            <Users className=\"w-8 h-8 text-[#bc9a64]\" />\n            User Management\n          </h1>\n          <p className=\"text-gray-400\">\n            Manage user accounts and permissions across all locations\n          </p>\n        </div>\n\n        {/* Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-2xl font-bold text-white\">\n                    {users.length}\n                  </p>\n                  <p className=\"text-sm text-gray-400\">Total Users</p>\n                </div>\n                <Users className=\"w-8 h-8 text-[#bc9a64]\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-2xl font-bold text-white\">\n                    {users.filter((u) => u.is_admin).length}\n                  </p>\n                  <p className=\"text-sm text-gray-400\">Administrators</p>\n                </div>\n                <Crown className=\"w-8 h-8 text-[#bc9a64]\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-2xl font-bold text-white\">\n                    {new Set(users.map((u) => u.location).filter(Boolean)).size}\n                  </p>\n                  <p className=\"text-sm text-gray-400\">Active Locations</p>\n                </div>\n                <Building2 className=\"w-8 h-8 text-[#bc9a64]\" />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Users Table */}\n        <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n          <CardHeader>\n            <CardTitle className=\"text-white\">System Users</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {users.map((user) => (\n                <div\n                  key={user.id}\n                  className=\"flex items-center justify-between p-4 bg-[#0e0e0e] rounded-lg border border-[#bc9a64]/10\"\n                >\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-[#bc9a64]/20 to-[#bc9a64]/10 rounded-lg flex items-center justify-center\">\n                      {user.is_admin ? (\n                        <Crown className=\"w-6 h-6 text-[#bc9a64]\" />\n                      ) : (\n                        <span className=\"text-lg font-medium text-[#bc9a64]\">\n                          {user.full_name?.[0] || user.email[0].toUpperCase()}\n                        </span>\n                      )}\n                    </div>\n                    <div>\n                      <p className=\"font-medium text-white\">\n                        {user.full_name || \"Unnamed User\"}\n                      </p>\n                      <p className=\"text-sm text-gray-400\">{user.email}</p>\n                      {user.location && (\n                        <div className=\"flex items-center gap-1 mt-1\">\n                          <Building2 className=\"w-3 h-3 text-gray-500\" />\n                          <span className=\"text-xs text-gray-500\">\n                            {user.location}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center gap-3\">\n                    <Badge\n                      className={\n                        user.is_admin\n                          ? \"bg-[#bc9a64]/20 text-[#bc9a64] border-[#bc9a64]/30\"\n                          : \"bg-gray-100 text-gray-800 border-gray-200\"\n                      }\n                    >\n                      {user.is_admin ? \"Administrator\" : \"User\"}\n                    </Badge>\n\n                    {user.id !== currentUser.id && (\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() =>\n                          user.id && handleToggleAdmin(user.id, user.is_admin)\n                        }\n                        className=\"border-[#bc9a64]/20 text-gray-300 hover:bg-[#bc9a64]/10 hover:text-white hover:border-[#bc9a64]/40\"\n                      >\n                        {user.is_admin ? \"Remove Admin\" : \"Make Admin\"}\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {users.length === 0 && (\n              <div className=\"text-center py-12\">\n                <Users className=\"w-12 h-12 text-gray-600 mx-auto mb-4\" />\n                <p className=\"text-gray-400 text-lg\">No users found</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Instructions */}\n        <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n          <CardHeader>\n            <CardTitle className=\"text-white\">Instructions</CardTitle>\n          </CardHeader>\n          <CardContent className=\"text-gray-300 space-y-2\">\n            <p>• New users can be invited through the dashboard settings</p>\n            <p>\n              • Regular users can only view and edit data for their assigned\n              location\n            </p>\n            <p>\n              • Administrators have full access to all locations and user\n              management\n            </p>\n            <p>• You cannot remove admin privileges from your own account</p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import { Shield, Clock, User as UserIcon, Eye } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useAuth } from \"@/hooks/useAuth\";\n\nexport default function AuditLogs() {\n  const { user: currentUser, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#0e0e0e] flex items-center justify-center\">\n        <div className=\"w-8 h-8 border-2 border-[#bc9a64] border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (!currentUser?.is_admin) {\n    return (\n      <div className=\"min-h-screen bg-[#0e0e0e] text-white p-6\">\n        <div className=\"max-w-2xl mx-auto mt-20\">\n          <Alert className=\"border-red-500/20 bg-red-500/10\">\n            <Shield className=\"h-4 w-4 text-red-400\" />\n            <AlertDescription className=\"text-red-300\">\n              Access denied. Only administrators can view audit logs.\n            </AlertDescription>\n          </Alert>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0e0e0e] text-white p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        {/* Header */}\n        <div>\n          <h1 className=\"text-3xl font-bold mb-2 flex items-center gap-3\">\n            <Shield className=\"w-8 h-8 text-[#bc9a64]\" />\n            Audit Logs\n          </h1>\n          <p className=\"text-gray-400\">\n            Complete audit trail of all system activities and changes\n          </p>\n        </div>\n\n        {/* Coming Soon */}\n        <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n          <CardContent className=\"p-12 text-center\">\n            <Shield className=\"w-16 h-16 text-[#bc9a64] mx-auto mb-4\" />\n            <h3 className=\"text-xl font-semibold text-white mb-2\">\n              Audit Logs Coming Soon\n            </h3>\n            <p className=\"text-gray-400 mb-6\">\n              Comprehensive audit logging and reporting features are being\n              developed and will be available in the next update.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 max-w-2xl mx-auto\">\n              <div className=\"text-center\">\n                <Clock className=\"w-8 h-8 text-[#bc9a64] mx-auto mb-2\" />\n                <p className=\"text-sm text-gray-300\">Activity Timeline</p>\n              </div>\n              <div className=\"text-center\">\n                <UserIcon className=\"w-8 h-8 text-[#bc9a64] mx-auto mb-2\" />\n                <p className=\"text-sm text-gray-300\">User Actions</p>\n              </div>\n              <div className=\"text-center\">\n                <Eye className=\"w-8 h-8 text-[#bc9a64] mx-auto mb-2\" />\n                <p className=\"text-sm text-gray-300\">Data Changes</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  Settings,\n  Users,\n  Plus,\n  Mail,\n  Shield,\n  AlertCircle,\n  CheckCircle,\n  Edit,\n  Trash2,\n  Crown,\n  MapPin,\n} from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useUserManagement } from \"@/hooks/useUserManagement\";\nimport { LOCATIONS, type Location } from \"@/types/entities\";\n\nexport default function SettingsPage() {\n  const { user: currentUser, loading: authLoading } = useAuth();\n  const {\n    users,\n    loading: usersLoading,\n    error: usersError,\n    inviteUser,\n    updateUserAdmin,\n    updateUserLocation,\n    deleteUser,\n  } = useUserManagement();\n\n  const [showInviteForm, setShowInviteForm] = useState(false);\n  const [inviteData, setInviteData] = useState({\n    email: \"\",\n    full_name: \"\",\n    location: \"\" as Location | \"\",\n    is_admin: false,\n  });\n  const [inviting, setInviting] = useState(false);\n  const [message, setMessage] = useState({ type: \"\", text: \"\" });\n  const [editingUser, setEditingUser] = useState<string | null>(null);\n\n  const loading = authLoading || usersLoading;\n\n  const handleInviteUser = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!inviteData.location) {\n      setMessage({\n        type: \"error\",\n        text: \"Please select a location for the user.\",\n      });\n      return;\n    }\n\n    setInviting(true);\n    setMessage({ type: \"\", text: \"\" });\n\n    try {\n      await inviteUser({\n        email: inviteData.email,\n        full_name: inviteData.full_name,\n        location: inviteData.location as Location,\n        is_admin: inviteData.is_admin,\n      });\n\n      setMessage({\n        type: \"success\",\n        text: `User ${inviteData.full_name} has been successfully created and invited to join the system.`,\n      });\n\n      // Reset form\n      setInviteData({\n        email: \"\",\n        full_name: \"\",\n        location: \"\",\n        is_admin: false,\n      });\n      setShowInviteForm(false);\n    } catch (error) {\n      console.error(\"Error inviting user:\", error);\n      setMessage({\n        type: \"error\",\n        text:\n          error instanceof Error\n            ? error.message\n            : \"Failed to invite user. Please try again.\",\n      });\n    }\n    setInviting(false);\n  };\n\n  const handleToggleAdminStatus = async (\n    userId: string,\n    currentStatus: boolean\n  ) => {\n    try {\n      await updateUserAdmin(userId, !currentStatus);\n      setMessage({\n        type: \"success\",\n        text: `User privileges updated successfully.`,\n      });\n    } catch (error) {\n      console.error(\"Error updating user:\", error);\n      setMessage({\n        type: \"error\",\n        text:\n          error instanceof Error\n            ? error.message\n            : \"Failed to update user privileges.\",\n      });\n    }\n  };\n\n  const handleLocationUpdate = async (\n    userId: string,\n    newLocation: Location\n  ) => {\n    try {\n      await updateUserLocation(userId, newLocation);\n      setMessage({\n        type: \"success\",\n        text: `User location updated successfully.`,\n      });\n    } catch (error) {\n      console.error(\"Error updating location:\", error);\n      setMessage({\n        type: \"error\",\n        text:\n          error instanceof Error\n            ? error.message\n            : \"Failed to update user location.\",\n      });\n    }\n  };\n\n  const handleDeleteUser = async (userId: string) => {\n    if (\n      !confirm(\n        \"Are you sure you want to delete this user? This action cannot be undone.\"\n      )\n    ) {\n      return;\n    }\n\n    try {\n      await deleteUser(userId);\n      setMessage({\n        type: \"success\",\n        text: \"User deleted successfully.\",\n      });\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n      setMessage({\n        type: \"error\",\n        text: error instanceof Error ? error.message : \"Failed to delete user.\",\n      });\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-[#0e0e0e] flex items-center justify-center\">\n        <div className=\"w-8 h-8 border-2 border-[#bc9a64] border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  if (!currentUser?.is_admin) {\n    return (\n      <div className=\"min-h-screen bg-[#0e0e0e] text-white p-6\">\n        <div className=\"max-w-2xl mx-auto mt-20\">\n          <Alert className=\"border-red-500/20 bg-red-500/10\">\n            <Shield className=\"h-4 w-4 text-red-400\" />\n            <AlertDescription className=\"text-red-300\">\n              Access denied. Only administrators can access settings.\n            </AlertDescription>\n          </Alert>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-[#0e0e0e] text-white p-6\">\n      <div className=\"max-w-6xl mx-auto space-y-8\">\n        {/* Header */}\n        <div>\n          <h1 className=\"text-3xl font-bold mb-2 flex items-center gap-3\">\n            <Settings className=\"w-8 h-8 text-[#bc9a64]\" />\n            Settings & User Management\n          </h1>\n          <p className=\"text-gray-400\">\n            Manage system settings, user accounts, and permissions\n          </p>\n        </div>\n\n        {/* Messages */}\n        {message.text && (\n          <Alert\n            className={\n              message.type === \"success\"\n                ? \"border-green-500/20 bg-green-500/10\"\n                : \"border-red-500/20 bg-red-500/10\"\n            }\n          >\n            {message.type === \"success\" ? (\n              <CheckCircle className=\"h-4 w-4 text-green-400\" />\n            ) : (\n              <AlertCircle className=\"h-4 w-4 text-red-400\" />\n            )}\n            <AlertDescription\n              className={\n                message.type === \"success\" ? \"text-green-300\" : \"text-red-300\"\n              }\n            >\n              {message.text}\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {/* User Management */}\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          {/* Invite New User */}\n          <div className=\"lg:col-span-1\">\n            <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n              <CardHeader>\n                <CardTitle className=\"text-white flex items-center gap-2\">\n                  <Plus className=\"w-5 h-5 text-[#bc9a64]\" />\n                  Invite New User\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {!showInviteForm ? (\n                  <div className=\"text-center\">\n                    <Users className=\"w-12 h-12 text-[#bc9a64] mx-auto mb-4\" />\n                    <p className=\"text-gray-400 mb-6\">\n                      Add new team members to the system\n                    </p>\n                    <Button\n                      onClick={() => setShowInviteForm(true)}\n                      className=\"w-full bg-gradient-to-r from-[#bc9a64] to-[#d4b876] hover:from-[#a8875a] hover:to-[#c1a56b] text-[#0e0e0e] font-semibold\"\n                    >\n                      <Plus className=\"w-4 h-4 mr-2\" />\n                      Invite User\n                    </Button>\n                  </div>\n                ) : (\n                  <form onSubmit={handleInviteUser} className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <label className=\"text-sm font-medium text-gray-300\">\n                        Email Address\n                      </label>\n                      <Input\n                        type=\"email\"\n                        value={inviteData.email}\n                        onChange={(e) =>\n                          setInviteData((prev) => ({\n                            ...prev,\n                            email: e.target.value,\n                          }))\n                        }\n                        className=\"bg-[#0e0e0e] border-[#333] text-white focus:border-[#bc9a64]\"\n                        placeholder=\"user@example.com\"\n                        required\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <label className=\"text-sm font-medium text-gray-300\">\n                        Full Name\n                      </label>\n                      <Input\n                        value={inviteData.full_name}\n                        onChange={(e) =>\n                          setInviteData((prev) => ({\n                            ...prev,\n                            full_name: e.target.value,\n                          }))\n                        }\n                        className=\"bg-[#0e0e0e] border-[#333] text-white focus:border-[#bc9a64]\"\n                        placeholder=\"John Doe\"\n                        required\n                      />\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <label className=\"text-sm font-medium text-gray-300\">\n                        Location\n                      </label>\n                      <Select\n                        value={inviteData.location}\n                        onValueChange={(value) =>\n                          setInviteData((prev) => ({\n                            ...prev,\n                            location: value as Location,\n                          }))\n                        }\n                      >\n                        <SelectTrigger className=\"bg-[#0e0e0e] border-[#333] text-white\">\n                          <SelectValue placeholder=\"Select location\" />\n                        </SelectTrigger>\n                        <SelectContent className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n                          {LOCATIONS.map((location) => (\n                            <SelectItem\n                              key={location}\n                              value={location}\n                              className=\"text-white hover:bg-[#bc9a64]/10\"\n                            >\n                              {location}\n                            </SelectItem>\n                          ))}\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"flex items-center gap-2\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"admin\"\n                        checked={inviteData.is_admin}\n                        onChange={(e) =>\n                          setInviteData((prev) => ({\n                            ...prev,\n                            is_admin: e.target.checked,\n                          }))\n                        }\n                        className=\"rounded border-[#333]\"\n                      />\n                      <label htmlFor=\"admin\" className=\"text-sm text-gray-300\">\n                        Administrator privileges\n                      </label>\n                    </div>\n\n                    <div className=\"flex gap-3\">\n                      <Button\n                        type=\"button\"\n                        variant=\"outline\"\n                        onClick={() => setShowInviteForm(false)}\n                        className=\"flex-1 border-[#333] text-gray-300 hover:bg-[#333]/50\"\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        type=\"submit\"\n                        disabled={inviting}\n                        className=\"flex-1 bg-gradient-to-r from-[#bc9a64] to-[#d4b876] hover:from-[#a8875a] hover:to-[#c1a56b] text-[#0e0e0e] font-semibold\"\n                      >\n                        {inviting ? (\n                          <div className=\"w-4 h-4 border-2 border-[#0e0e0e] border-t-transparent rounded-full animate-spin\" />\n                        ) : (\n                          <>\n                            <Mail className=\"w-4 h-4 mr-2\" />\n                            Send Invite\n                          </>\n                        )}\n                      </Button>\n                    </div>\n                  </form>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Current Users */}\n          <div className=\"lg:col-span-2\">\n            <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n              <CardHeader>\n                <CardTitle className=\"text-white flex items-center justify-between\">\n                  <span className=\"flex items-center gap-2\">\n                    <Users className=\"w-5 h-5 text-[#bc9a64]\" />\n                    System Users ({users.length})\n                  </span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {usersError ? (\n                  <Alert className=\"border-red-500/20 bg-red-500/10\">\n                    <AlertCircle className=\"h-4 w-4 text-red-400\" />\n                    <AlertDescription className=\"text-red-300\">\n                      {usersError}\n                    </AlertDescription>\n                  </Alert>\n                ) : users.length === 0 ? (\n                  <div className=\"text-center py-12\">\n                    <Users className=\"w-12 h-12 text-gray-600 mx-auto mb-4\" />\n                    <p className=\"text-gray-400 text-lg\">No users found</p>\n                    <p className=\"text-gray-500 text-sm\">\n                      Start by inviting your first team member\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {users.map((user) => (\n                      <div\n                        key={user.id}\n                        className=\"p-4 bg-[#0e0e0e] rounded-lg border border-[#bc9a64]/10\"\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center gap-4\">\n                            <div className=\"w-10 h-10 bg-gradient-to-br from-[#bc9a64]/20 to-[#bc9a64]/10 rounded-lg flex items-center justify-center\">\n                              {user.is_admin ? (\n                                <Crown className=\"w-5 h-5 text-[#bc9a64]\" />\n                              ) : (\n                                <span className=\"text-sm font-medium text-[#bc9a64]\">\n                                  {user.full_name?.[0] ||\n                                    user.email[0].toUpperCase()}\n                                </span>\n                              )}\n                            </div>\n                            <div>\n                              <p className=\"font-medium text-white\">\n                                {user.full_name || \"Unnamed User\"}\n                              </p>\n                              <p className=\"text-sm text-gray-400\">\n                                {user.email}\n                              </p>\n                              <div className=\"flex items-center gap-2 mt-1\">\n                                <Badge\n                                  variant={\n                                    user.is_admin ? \"default\" : \"secondary\"\n                                  }\n                                  className={\n                                    user.is_admin\n                                      ? \"bg-[#bc9a64] text-[#0e0e0e]\"\n                                      : \"bg-gray-700 text-gray-300\"\n                                  }\n                                >\n                                  {user.is_admin ? \"Admin\" : \"User\"}\n                                </Badge>\n                                {user.location && (\n                                  <Badge\n                                    variant=\"outline\"\n                                    className=\"border-[#bc9a64]/20 text-[#bc9a64]\"\n                                  >\n                                    <MapPin className=\"w-3 h-3 mr-1\" />\n                                    {user.location}\n                                  </Badge>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center gap-2\">\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() =>\n                                setEditingUser(\n                                  editingUser === user.id ? null : user.id!\n                                )\n                              }\n                              className=\"border-[#bc9a64]/20 text-gray-300 hover:bg-[#bc9a64]/10\"\n                            >\n                              <Edit className=\"w-4 h-4\" />\n                            </Button>\n                            {user.id !== currentUser?.id && (\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleDeleteUser(user.id!)}\n                                className=\"border-red-500/20 text-red-400 hover:bg-red-500/10\"\n                              >\n                                <Trash2 className=\"w-4 h-4\" />\n                              </Button>\n                            )}\n                          </div>\n                        </div>\n\n                        {/* Edit Form */}\n                        {editingUser === user.id && (\n                          <div className=\"mt-4 pt-4 border-t border-[#bc9a64]/10\">\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                              <div className=\"space-y-2\">\n                                <label className=\"text-sm font-medium text-gray-300\">\n                                  Location\n                                </label>\n                                <Select\n                                  value={user.location || \"\"}\n                                  onValueChange={(value) =>\n                                    handleLocationUpdate(\n                                      user.id!,\n                                      value as Location\n                                    )\n                                  }\n                                >\n                                  <SelectTrigger className=\"bg-[#1a1a1a] border-[#333] text-white\">\n                                    <SelectValue placeholder=\"Select location\" />\n                                  </SelectTrigger>\n                                  <SelectContent className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n                                    {LOCATIONS.map((location) => (\n                                      <SelectItem\n                                        key={location}\n                                        value={location}\n                                        className=\"text-white hover:bg-[#bc9a64]/10\"\n                                      >\n                                        {location}\n                                      </SelectItem>\n                                    ))}\n                                  </SelectContent>\n                                </Select>\n                              </div>\n\n                              <div className=\"space-y-2\">\n                                <label className=\"text-sm font-medium text-gray-300\">\n                                  Admin Status\n                                </label>\n                                <div className=\"flex items-center gap-4\">\n                                  <Button\n                                    variant={\n                                      user.is_admin ? \"default\" : \"outline\"\n                                    }\n                                    size=\"sm\"\n                                    onClick={() =>\n                                      handleToggleAdminStatus(\n                                        user.id!,\n                                        user.is_admin\n                                      )\n                                    }\n                                    className={\n                                      user.is_admin\n                                        ? \"bg-[#bc9a64] text-[#0e0e0e] hover:bg-[#a8875a]\"\n                                        : \"border-[#bc9a64]/20 text-gray-300 hover:bg-[#bc9a64]/10\"\n                                    }\n                                    disabled={user.id === currentUser?.id}\n                                  >\n                                    <Shield className=\"w-4 h-4 mr-2\" />\n                                    {user.is_admin\n                                      ? \"Remove Admin\"\n                                      : \"Make Admin\"}\n                                  </Button>\n                                  {user.id === currentUser?.id && (\n                                    <span className=\"text-xs text-gray-500\">\n                                      Cannot modify your own admin status\n                                    </span>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* System Information */}\n        <Card className=\"bg-[#1a1a1a] border-[#bc9a64]/20\">\n          <CardHeader>\n            <CardTitle className=\"text-white\">System Information</CardTitle>\n          </CardHeader>\n          <CardContent className=\"text-gray-300 space-y-2\">\n            <p>• Users can only access data for their assigned location</p>\n            <p>\n              • Administrators have full access to all locations and system\n              settings\n            </p>\n            <p>\n              • All user actions are logged for accountability and audit\n              purposes\n            </p>\n            <p>\n              • New users will receive an email invitation to join the system\n            </p>\n            <p>• Users authenticate using their Google account</p>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","auth","getAuth","LOG_LEVELS","logger","constructor","__publicField","this","isDevelopment","enableLogging","sanitizeData","data","sensitiveFields","sanitized","forEach","field","log","level","message","Date","toISOString","sanitizedData","sendToErrorTracking","logEntry","timestamp","userAgent","navigator","url","window","location","href","existingLogs","JSON","parse","sessionStorage","getItem","push","length","splice","setItem","stringify","error","warn","info","debug","getLogs","clearLogs","removeItem","COLLECTIONS","timestampToString","toDate","convertFirestoreData","doc","id","created_at","updated_at","BaseFirebaseService","list","getDocs","collection","collectionName","docs","map","Error","get","docRef","docSnap","getDoc","exists","create","now","Timestamp","docData","addDoc","newDoc","update","updateData","updateDoc","updatedDoc","deleteDoc","SalesRecordFirebaseEntity","super","arguments","getByLocation","q","query","where","orderBy","getByDateRange","startDate","endDate","NoteFirebaseEntity","UserFirebaseEntity","me","Promise","resolve","reject","unsubscribe","onAuthStateChanged","async","firebaseUser","email","querySnapshot","empty","isFirstUser","newUser","full_name","displayName","is_admin","userDoc","login","provider","GoogleAuthProvider","result","signInWithPopup","user","logout","signOut","getByEmail","promoteToAdmin","AuditLogFirebaseEntity","logAction","action","entityType","entityId","oldData","newData","currentUser","auditData","action_type","entity_type","entity_id","user_email","old_values","new_values","details","ip_address","onAuthStateChange","callback","SalesRecordEntity","NoteEntity","UserEntity","alertVariants","cva","variants","variant","default","destructive","defaultVariants","Alert","React.forwardRef","className","props","ref","jsxRuntimeExports","jsx","role","cn","forwardRef","AlertDescription","AuditLogger","oldValues","newValues","logSalesRecord","recordId","logNote","noteId","logUser","userId","logLogin","logLogout","useAuth","setUser","useState","loading","setLoading","setError","useEffect","loadUser","err","isAuthenticated","isAdmin","userLocation","refetch","LOCATIONS","badgeVariants","secondary","outline","Badge","useUserManagement","users","setUsers","loadUsers","allUsers","inviteUser","userData","updateUserAdmin","find","u","updateUserLocation","deleteUser","delete","authLoading","usersLoading","children","jsxs","Users","Card","CardContent","filter","Crown","Set","Boolean","size","Building2","CardHeader","CardTitle","_a","toUpperCase","Button","onClick","currentAdminStatus","handleToggleAdmin","Shield","Clock","UserIcon","Eye","usersError","showInviteForm","setShowInviteForm","inviteData","setInviteData","inviting","setInviting","setMessage","type","text","editingUser","setEditingUser","Settings","CheckCircle","AlertCircle","Plus","onSubmit","e","preventDefault","Input","value","onChange","prev","target","placeholder","required","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","checked","htmlFor","disabled","Fragment","Mail","MapPin","Edit","confirm","handleDeleteUser","Trash2","newLocation","handleLocationUpdate","currentStatus","handleToggleAdminStatus"],"mappings":"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"}